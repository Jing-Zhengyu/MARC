#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
#加载所有函数 用于测试
devtools::load_all()
_
data_for_analysis <- add_snr(data_for_analysis)
index
ncol(data)
c(1:index, length_col, index+1:length_col-1)
c(1:index, length_col, index+1:length_col-1)
index+1
length_col
c(1:index, length_col, (index+1:length_col)-1)
length_col
(index+1:length_col)-1
((index+1):length_col)-1
?txtProgressBar
#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
#' Title
#'
#' @param data
#'
#' @return
#' @export
#'
#' @examples
add_snr <- function(data){
data$SNR <- NA
#添加进度条
i <- 1
pd <- txtProgressBar(style = 3)
for(uid in unique(data$unique_num)){
single_data <- dplyr::filter(data, unique_num == uid)
data_stat <-
single_data %>%
dplyr::filter(type == "control", !str_detect(gene, "(?i)cd45")) %>%
group_by(Name) %>%
summarise(fc = mean(median_FC))
n_noise_log <- max(abs(log2(data_stat$fc + 1e-9)))
snr <- 2^(abs(log2(single_data$median_FC)) - n_noise_log)
data$SNR[data$unique_num == uid] <- snr
#进度条本体
setTxtProgressBar(pd, i / length(unique(data$unique_num)))
i <- i + 1
}
browser()
index <- which(colnames(data) == "besides_ratio") - 1
length_col <- ncol(data)
return(data[c(1:index, length_col, ((index+1):length_col)-1)])
}
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
View(data_for_analysis)
#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
data_for_analysis <- add_snr(data_for_analysis)
c(1:index, length_col, ((index+1):length_col)-1)
#加载所有函数 用于测试
devtools::load_all()
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
View(data_for_analysis)
#加载所有函数 用于测试
devtools::load_all()
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
data_for_analysis <- add_snr(data_for_analysis)
#加载所有函数 用于测试
devtools::load_all()
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
data_for_analysis <- add_snr(data_for_analysis)
devtools::document()
devtools::build()
devtools::build_readme()
usethis::use_readme_rmd()
noise <- 0.9
noise <- 1.1
1/0.1
2^(log2(2)-log2(1.1))
#加载所有函数 用于测试
devtools::load_all()
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
data_for_analysis <- add_snr(data_for_analysis)
warnings()
debug(add_snr)
data_for_analysis <- add_snr(data_for_analysis)
n_noise_log
log2(data_stat$fc - 1)
data_stat$fc
#加载所有函数 用于测试
devtools::load_all()
#加载所有函数 用于测试
devtools::load_all()
data_for_analysis <- add_snr(data_for_analysis)
View(data_for_analysis)
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
data_for_analysis <- add_snr(data_for_analysis)
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
data_for_analysis <- add_snr(data_for_analysis)
View(data_for_analysis)
2^2-3
2^(2-3)
#加载所有函数 用于测试
devtools::load_all()
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
data_for_analysis <- add_snr(data_for_analysis)
View(data_for_analysis)
a <- filter(data_for_analysis, unique_num %in% c(1161, 1016, 854, 695))
a <- dplyr::filter(data_for_analysis, unique_num %in% c(1161, 1016, 854, 695))
View(a)
log(0)
#加载所有函数 用于测试
devtools::load_all()
options(scipen = 200)
View(a)
View(a)
#加载所有函数 用于测试
devtools::load_all()
#在函数加完包所需结构之后，用来构建一个包
devtools::document()
devtools::build()
devtools::build_readme()
usethis::use_readme_rmd()
search_table <-
tibble::tribble(
~first_sample, ~second_sample, ~lable, ~limit, ~except,
#肿瘤中cd4 pd1阳性与阴性比较
"(?i)cd4.*pd-?1_(p|hi)", "(?i)cd4.*pd-?1_(n|lo)", "cd4_pd-1P-N", "(?i)tumor", NULL,
#肿瘤中cd8 pd1阳性与阴性比较
"(?i)cd8.*pd-?1_(p|hi)", "(?i)cd8.*pd-?1_(n|lo)", "cd8_pd-1P-N", "(?i)tumor", NULL,
#肿瘤中cd4 pd1阳性与外周naive比较
"(?i)(?<!spleen.{0,200}?)cd4.*pd-?1_(p|hi)(?!.{0,200}?spleen)",
"(?i)cd4.*naive", "cd4_pd-1P-naive", NULL, NULL,
#肿瘤中cd8 pd1阳性与外周naive比较
"(?i)(?<!spleen.{0,200}?)cd8.*pd-?1_(p|hi)(?!.{0,200}?spleen)",
"(?i)cd8.*naive", "cd8_pd-1P-naive", NULL, NULL,
#cd8细胞的TNF等分泌物
"(?i)tnf_(p|hi)", "(?i)tnf_(n|lo)", "cd8-TNF_P-N", "(?i)cd8", NULL,
#cd8细胞的107a等分泌物
"(?i)cd107a_(p|hi)", "(?i)cd107a_(n|lo)", "cd8-cd107a_P-N", "(?i)cd8", NULL,
#肿瘤中cd4阳性与外周naive比较
"(?i)(?<=tumor.{0,200}?)cd4|cd4(?=.{0,200}?(tumor))",
"(?i)(?<!tumor.{0,200}?)cd4.*naive(?!.{0,200}?tumor)",
"cd4_tumor-naive", NULL, "(?i)pd-?1",
#肿瘤中cd8阳性与外周naive比较
"(?i)(?<=tumor.{0,200}?)cd8|cd8(?=.{0,200}?(tumor))",
"(?i)(?<!tumor.{0,200}?)cd8.*naive(?!.{0,200}?tumor)",
"cd8_tumor-naive", NULL, "(?i)pd-?1",
#外周cd4 effector与naive比较
"(?i)cd4.*(?<!cen.{0,10})effector", "(?i)cd4.*naive",
"cd4_effector-naive", "(?i)spleen|ln", NULL,
#外周cd8 effector与naive比较
"(?i)cd8.*(?<!cen.{0,10})effector", "(?i)cd8.*naive", "cd8_effector-naive", "(?i)spleen", NULL,
#外周cd8 CM与naive比较
"(?i)cd8.*(CM|central)", "(?i)cd8.*naive", "cd8_CM-naive", "(?i)spleen", NULL,
#巨噬细胞里tnf高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)tnf_(p|hi)(?!.{0,200}?spleen)",
"(?i)tnf_(n|lo)", "MAC_TNF_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里INOS高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)inos_(p|hi)(?!.{0,200}?spleen)",
"(?i)inos_(n|lo)", "MAC_INOS_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里arg高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)arg1?_(p|hi)(?!.{0,200}?spleen)",
"(?i)arg1?_(n|lo)", "MAC_ARG1_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里tgf高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)tgf_(p|hi)(?!.{0,200}?spleen)",
"(?i)tgf_(n|lo)", "MAC_TGFβ1_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里tnf高表达与arg1高表达之间比较
"(?i)(?<!spleen.{0,200}?)tnf_(p|hi)(?!.{0,200}?spleen)",
"(?i)arg1?_(p|hi)", "MAC_TNF_P-ARG1_P", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#nk中cd107a高表达与低表达之间比较
"(?i)cd107a_(p|hi)", "(?i)cd107a_(n|lo)", "NK-cd107a_P-N", "(?i)NK", NULL,
#nk中tnf高表达与低表达之间比较
"(?i)tnf_(p|hi)", "(?i)tnf_(n|lo)", "NK_TNF_P-N", "(?i)NK", NULL,
#nk中pd1阳性与阴性之间比较
"(?i)pd.?1_(p|hi)", "(?i)pd.?1_(n|lo)", "NK_pd-1P-N", "(?i)NK", NULL
)
search_table
find_sample_by_regex
#在函数加完包所需结构之后，用来构建一个包
devtools::document()
devtools::build()
devtools::build_readme()
usethis::use_readme_rmd()
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
immune_data <-
data_for_analysis %>%
filter(mouse_index %in% c(8,264,391,385,212) &
!unique_num %in% c() &   #517,1162,1029,1160,700,721,697,1156,851,852,954,959
!str_detect(organ, "thymus|epididymis_|NA|brown_fat|gland|bone|muscle|ovary"),
str_detect(organ, "(?i)spleen.|ln.|blood")
) %>%
group_by(sample, Name) %>%
filter(order(unique_num, decreasing = T) == 1)
data_for_analysis
data_for_analysis %>%
filter(mouse_index %in% c(8,264,391,385,212) &
!unique_num %in% c() &   #517,1162,1029,1160,700,721,697,1156,851,852,954,959
!str_detect(organ, "thymus|epididymis_|NA|brown_fat|gland|bone|muscle|ovary"),
str_detect(organ, "(?i)spleen.|ln.|blood")
)
immune_data <-
data_for_analysis %>%
dplyr::filter(mouse_index %in% c(8,264,391,385,212) &
!unique_num %in% c() &   #517,1162,1029,1160,700,721,697,1156,851,852,954,959
!str_detect(organ, "thymus|epididymis_|NA|brown_fat|gland|bone|muscle|ovary"),
str_detect(organ, "(?i)spleen.|ln.|blood")
) %>%
group_by(sample, Name) %>%
filter(order(unique_num, decreasing = T) == 1)
immune_data <-
data_for_analysis %>%
dplyr::filter(mouse_index %in% c(8,264,391,385,212) &
!unique_num %in% c() &   #517,1162,1029,1160,700,721,697,1156,851,852,954,959
!str_detect(organ, "thymus|epididymis_|NA|brown_fat|gland|bone|muscle|ovary"),
str_detect(organ, "(?i)spleen.|ln.|blood")
) %>%
group_by(sample, Name) %>%
dplyr::filter(order(unique_num, decreasing = T) == 1)
compare_table <- tribble(
~first_sample, ~second_sample, ~label, ~limit, ~except,
"B_cell", "CD\\d|treg", "B-T", NULL, NULL,
"8_e", "8_n", "cd8E-cd8N", NULL, NULL,
"8_cm", "8_n", "cd8CM-cd8N", NULL, NULL,
"4_e", "4_n", "cd4E-cd4n", NULL, NULL,
"8_e", "4_e", "cd8e-cd4e", NULL, NULL,
"8_n", "4_n", "cd8n-cd4n", NULL, NULL,
"treg", "4_n", "treg-cd4n", NULL, NULL,
"treg", "4_e", "treg-cd4e", NULL, NULL,
"blood", "B_cell", "blood-B", NULL, NULL,
"blood", "CD\\d|treg", "blood-T", NULL, NULL
)
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
#加载所有函数 用于测试
devtools::load_all()
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
#加载所有函数 用于测试
devtools::load_all()
#加载所有函数 用于测试
devtools::load_all()
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
debug(get_unique_num_table)
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
library(tidyverse)
detach("package:dplyr", unload = TRUE)
library(dplyr)
library(dplyr)
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
debug(find_sample_by_regex)
undebug(get_unique_num_table)
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
limit
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
single_mouse_data$unique_num[str_detect(single_mouse_data$sample, exp_regex)]
str_detect(single_mouse_data$sample, exp_regex)
exp_regex
get_unique_num_table
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
single_mouse_data
exp_regex
compare_table <- as.data.frame(compare_table)
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
detach("package:dplyr", unload = TRUE)
library(dplyr)
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
#加载所有函数 用于测试
devtools::load_all()
immune_data <-
data_for_analysis %>%
dplyr::filter(mouse_index %in% c(8,264,391,385,212) &
!unique_num %in% c() &   #517,1162,1029,1160,700,721,697,1156,851,852,954,959
!str_detect(organ, "thymus|epididymis_|NA|brown_fat|gland|bone|muscle|ovary"),
str_detect(organ, "(?i)spleen.|ln.|blood")
) %>%
group_by(sample, Name) %>%
dplyr::filter(order(unique_num, decreasing = T) == 1)
compare_table <- tribble(
~first_sample, ~second_sample, ~label, ~limit, ~except,
"B_cell", "CD\\d|treg", "B-T", NULL, NULL,
"8_e", "8_n", "cd8E-cd8N", NULL, NULL,
"8_cm", "8_n", "cd8CM-cd8N", NULL, NULL,
"4_e", "4_n", "cd4E-cd4n", NULL, NULL,
"8_e", "4_e", "cd8e-cd4e", NULL, NULL,
"8_n", "4_n", "cd8n-cd4n", NULL, NULL,
"treg", "4_n", "treg-cd4n", NULL, NULL,
"treg", "4_e", "treg-cd4e", NULL, NULL,
"blood", "B_cell", "blood-B", NULL, NULL,
"blood", "CD\\d|treg", "blood-T", NULL, NULL
)
compare_table <- as.data.frame(compare_table)
info_1610 <- get_unique_num_table(as.data.frame(immune_data),
mouse_index_list = c(8,264,391,385,212),
strain = 1610, search_table = compare_table)
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
debug(variational_grna_specified_sample_batch)
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
extract_samples(data_for_analysis, samples_info = samples_info,
unique_num_info = unique_num_info)
data_for_analysis %>%
dplyr::filter(unique_num == unique_num_info[i, 1]) %>%
mutate(group = unique_num_info[i, 3], numerator = "yes")
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
temp_df
out_data
rbind(out_data, temp_df)
temp_df
out_data
out_data <- data_for_analysis[1,]
rbind(out_data, temp_df)
out_data <- data_for_analysis[0,]
rbind(out_data, temp_df)
out_data <- data_for_analysis[0,]
rbind(out_data, temp_df)
out_data <- data_for_analysis[0,]
out_data$numerator  <- NA
out_data$group <- NA
rbind(out_data, temp_df)
View(temp_df)
View(out_data)
out_data <- data_for_analysis[0,]
out_data$numerator  <- NA_character_
out_data$group <- NA_character_
#将等下分析作为分子的样本放进去
temp_df <-
data_for_analysis %>%
dplyr::filter(unique_num == unique_num_info[i, 1]) %>%
mutate(group = unique_num_info[i, 3], numerator = "yes")
rbind(out_data, temp_df)
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
rbind(out_data, temp_df)
#加载所有函数 用于测试
devtools::load_all()
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
#加载所有函数 用于测试
devtools::load_all()
tcell_1610 <-
variational_grna_specified_sample_batch(immune_data, remove_grna = "Cd47",
unique_num_info = info_1610,
up_lfc = 0.5, down_lfc = -0.5)
View(tcell_1610)
View(tcell_1610[["treg-cd4n_1610"]])
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
1/1.5
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
#加载所有函数 用于测试
devtools::load_all()
load("E:/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-64 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis", "all_data")])
?list
# 重写数据清理代码，加快分析速度-------------------------------------------------------------------------------------------------------
debug(data_clean_for_ngs)
hp_1 <- data_clean_for_ngs("2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
contamination_condition
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
data_ori$Name[which(str_detect(data_ori$Name,"Map"))-1]
data.frame(index = marker,ratio =
data_ori$Name[which(str_detect(data_ori$Name,"Map"))])
contamination
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
contamination %>% filter(as.numeric(str_extract(ratio,"\\d*")) < cutoff)
contamination
#install.packages("RColorBrewer")
#install.packages("ggrepel")
#install.packages("gghalves")
install.packages("tidyverse")
library("tidyverse")
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
detach("package:stats", unload = TRUE)
library(stats, lib.loc = "C:/Users/ihtguy/AppData/Local/Temp/RtmpwR2tSt/renv-system-library")
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
detach("package:dplyr", unload = TRUE)
library(dplyr)
#读取并计算污染情况--------------------------------------------------------------
contamination_condition <- function(data_ori, cutoff = 99){
marker <- data_ori$Name[which(str_detect(data_ori$Name,"Map"))-1]
contamination <- data.frame(index = marker,ratio =
data_ori$Name[which(str_detect(data_ori$Name,"Map"))])
contamination$ratio <- str_remove(contamination$ratio,"Map.*= ")
output <- contamination %>% dplyr::filter(as.numeric(str_extract(ratio, "\\d*")) < cutoff)
return(output)
}
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
library("devtools")
library("tidyverse")
library("magrittr")
#加载所有函数 用于测试
devtools::load_all()
rm(contamination_condition())
rm(contamination_condition)
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
# 重写数据清理代码，加快分析速度-------------------------------------------------------------------------------------------------------
debug(data_clean_for_ngs)
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
marc_group(data_ori)
percent_marc(data_group, remove_grna_index = c(1:3), remove_gene = "cd47")
#加载所有函数 用于测试
devtools::load_all()
# 重写数据清理代码，加快分析速度-------------------------------------------------------------------------------------------------------
debug(data_clean_for_ngs)
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
#加载所有函数 用于测试
devtools::load_all()
#加载所有函数 用于测试
devtools::load_all()
# 重写数据清理代码，加快分析速度-------------------------------------------------------------------------------------------------------
debug(data_clean_for_ngs)
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
percent_marc(data_group, remove_grna_index = c(1:3), remove_gene = "cd47")
warnings()
single_data_f
View(temp_list)
temp_list[k]
single_data_f
k
temp_list[k]
temp_list[[k]] <- single_data_f
#加载所有函数 用于测试
devtools::load_all()
# 重写数据清理代码，加快分析速度-------------------------------------------------------------------------------------------------------
debug(data_clean_for_ngs)
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
percent_marc(data_group, remove_grna_index = c(1:3), remove_gene = "cd47")
#加载所有函数 用于测试
devtools::load_all()
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv",
sample_path = "E:/my_lab/MARC_bioinformatics/amplicon/result/sample_info/sample_info HP-1.xlsx")
View(hp_1)
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
