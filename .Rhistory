debug(data_clean_for_ngs)
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
percent_marc(data_group, remove_grna_index = c(1:3), remove_gene = "cd47")
warnings()
single_data_f
View(temp_list)
temp_list[k]
single_data_f
k
temp_list[k]
temp_list[[k]] <- single_data_f
#加载所有函数 用于测试
devtools::load_all()
# 重写数据清理代码，加快分析速度-------------------------------------------------------------------------------------------------------
debug(data_clean_for_ngs)
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
percent_marc(data_group, remove_grna_index = c(1:3), remove_gene = "cd47")
#加载所有函数 用于测试
devtools::load_all()
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv", sample_path = "sample_info/sample_info HP-1.xlsx")
hp_1 <- data_clean_for_ngs("E:/my_lab/MARC_bioinformatics/amplicon/result/2020-01-06 HP-1.tsv",
sample_path = "E:/my_lab/MARC_bioinformatics/amplicon/result/sample_info/sample_info HP-1.xlsx")
View(hp_1)
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
install.packages("ggplot2")
install.packages("magrittr")
#install.packages("RColorBrewer")
#install.packages("ggrepel")
#install.packages("gghalves")
install.packages("tidyverse")
install.packages("reshape2")
install.packages("ggsci")
install.packages("xlsx")
install.packages("yyplot")
#install.packages("ggbreak")
install.packages("tidyr")
#install.packages("ggseqlogo")
install.packages("extrafont")
#install.packages("sangerseqR")
install.packages("profvis")
library("devtools")
library("tidyverse")
library("magrittr")
install.packages("tidyverse")
library(dplyr)
library("devtools")
library("devtools")
install.packages("devtools")
library("devtools")
library("tidyverse")
remove.packages("tidyverse")
#install.packages("RColorBrewer")
#install.packages("ggrepel")
#install.packages("gghalves")
install.packages("tidyverse")
library(tidyverse)
library("magrittr")
library("stringr")
load("D:/research/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-65 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis")])
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes",
str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
#加载所有函数 用于测试
devtools::load_all()
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes",
str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
?as_tibble.data.frame
remove.packages("tidyverse")
remove.packages("dplyr")
#install.packages("RColorBrewer")
#install.packages("ggrepel")
#install.packages("gghalves")
install.packages("tidyverse")
library("tidyverse")
library("devtools")
library("tidyverse")
library("magrittr")
load("D:/research/my_lab/MARC_bioinformatics/amplicon/result/RData/HP7-65 all data.RData")
rm(list = ls()[!ls() %in% c("data_for_analysis")])
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes",
str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, cas == "yes",
str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
data_for_analysis
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk")) %>%
select(mouse_index)
data_for_analysis %>%
select(mouse_index)
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913) %>%
select(mouse_index) %>%
unique() %>%
unlist()
mouse_list <-
data_for_analysis %>%
filter(data_for_analysis$mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
mouse_list <-
data_for_analysis %>%
filter(data_for_analysis$mouse_strain == 1913, data_for_analysis$order == 1, data_for_analysis$cas == "yes", str_detect(data_for_analysis$sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
filter
mouse_list <-
data_for_analysis %>%
dplyr::filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
#加载所有函数 用于测试
devtools::load_all()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
?filter
detach("package:stats", unload = TRUE)
library(stats, lib.loc = "C:/Users/46790/AppData/Local/Temp/RtmpErWk0X/renv-system-library")
library("tidyverse")
install.packages("conflicted")
conflicted::conflict_prefer("filter", "dplyr")
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
#' Title
#'
#' @param data_for_analysis
#' @param mouse_index_list
#' @param strain
#'
#' @return
#' @export
#'
#' @examples
get_unique_num_table <-
function(data_for_analysis, mouse_index_list, strain, search_table = NULL){
unique_num_output <- data.frame(exp_index = 0, con_index = 0, group = 0)[0,]
if(is.null(search_table)){
search_table <-
tibble::tribble(
~first_sample, ~second_sample, ~lable, ~limit, ~except,
#肿瘤中cd4 pd1阳性与阴性比较
"(?i)cd4.*pd-?1_(p|hi)", "(?i)cd4.*pd-?1_(n|lo)", "cd4_pd-1P-N", "(?i)tumor", NULL,
#肿瘤中cd8 pd1阳性与阴性比较
"(?i)cd8.*pd-?1_(p|hi)", "(?i)cd8.*pd-?1_(n|lo)", "cd8_pd-1P-N", "(?i)tumor", NULL,
#肿瘤中cd4 pd1阳性与外周naive比较
"(?i)(?<!spleen.{0,200}?)cd4.*pd-?1_(p|hi)(?!.{0,200}?spleen)",
"(?i)cd4.*naive", "cd4_pd-1P-naive", NULL, NULL,
#肿瘤中cd8 pd1阳性与外周naive比较
"(?i)(?<!spleen.{0,200}?)cd8.*pd-?1_(p|hi)(?!.{0,200}?spleen)",
"(?i)cd8.*naive", "cd8_pd-1P-naive", NULL, NULL,
#cd8细胞的TNF等分泌物
"(?i)tnf_(p|hi)", "(?i)tnf_(n|lo)", "cd8-TNF_P-N", "(?i)cd8", NULL,
#cd8细胞的107a等分泌物
"(?i)cd107a_(p|hi)", "(?i)cd107a_(n|lo)", "cd8-cd107a_P-N", "(?i)cd8", NULL,
#肿瘤中cd4阳性与外周naive比较
"(?i)(?<=tumor.{0,200}?)cd4|cd4(?=.{0,200}?(tumor))",
"(?i)(?<!tumor.{0,200}?)cd4.*naive(?!.{0,200}?tumor)",
"cd4_tumor-naive", NULL, "(?i)pd-?1",
#肿瘤中cd8阳性与外周naive比较
"(?i)(?<=tumor.{0,200}?)cd8|cd8(?=.{0,200}?(tumor))",
"(?i)(?<!tumor.{0,200}?)cd8.*naive(?!.{0,200}?tumor)",
"cd8_tumor-naive", NULL, "(?i)pd-?1",
#外周cd4 effector与naive比较
"(?i)cd4.*(?<!cen.{0,10})effector", "(?i)cd4.*naive",
"cd4_effector-naive", "(?i)spleen|ln", NULL,
#外周cd8 effector与naive比较
"(?i)cd8.*(?<!cen.{0,10})effector", "(?i)cd8.*naive", "cd8_effector-naive", "(?i)spleen", NULL,
#外周cd8 CM与naive比较
"(?i)cd8.*(CM|central)", "(?i)cd8.*naive", "cd8_CM-naive", "(?i)spleen", NULL,
#巨噬细胞里tnf高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)tnf_(p|hi)(?!.{0,200}?spleen)",
"(?i)tnf_(n|lo)", "MAC_TNF_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里INOS高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)inos_(p|hi)(?!.{0,200}?spleen)",
"(?i)inos_(n|lo)", "MAC_INOS_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里arg高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)arg1?_(p|hi)(?!.{0,200}?spleen)",
"(?i)arg1?_(n|lo)", "MAC_ARG1_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里tgf高表达与低表达之间比较
"(?i)(?<!spleen.{0,200}?)tgf_(p|hi)(?!.{0,200}?spleen)",
"(?i)tgf_(n|lo)", "MAC_TGFβ1_P-N", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#巨噬细胞里tnf高表达与arg1高表达之间比较
"(?i)(?<!spleen.{0,200}?)tnf_(p|hi)(?!.{0,200}?spleen)",
"(?i)arg1?_(p|hi)", "MAC_TNF_P-ARG1_P", "(?i)(F4/80_P|cd11b_P)", "(?i)spleen",
#nk中cd107a高表达与低表达之间比较
"(?i)cd107a_(p|hi)", "(?i)cd107a_(n|lo)", "NK-cd107a_P-N", "(?i)NK", NULL,
#nk中tnf高表达与低表达之间比较
"(?i)tnf_(p|hi)", "(?i)tnf_(n|lo)", "NK_TNF_P-N", "(?i)NK", NULL,
#nk中pd1阳性与阴性之间比较
"(?i)pd.?1_(p|hi)", "(?i)pd.?1_(n|lo)", "NK_pd-1P-N", "(?i)NK", NULL,
#nk是否在肿瘤中之间比较
"(?i)(?<=tumor.{0,200}?)cd4|cd4(?=.{0,200}?(tumor))",
"(?i)(?<!tumor.{0,200}?)cd4.*naive(?!.{0,200}?tumor)",
"NK_tumor-periphery", "(?i)NK", "(?i)pd.?1|cd107a|tnf_"
)
search_table[4] <- as.character(search_table[[4]])
search_table[5] <- as.character(search_table[[5]])
search_table <- as.data.frame(search_table)
}
for(mouse in mouse_index_list){
single_mouse_data <-
data_for_analysis %>%
filter(mouse_index == mouse, mouse_strain == strain, !is.na(median_reads)) %>%
select(sample, mouse_index, unique_num) %>%
arrange(sample)
#各老鼠中循环查找表中信息
for(i in 1:dim(search_table)[1]){
unique_num_output <-
rbind(unique_num_output,
find_sample_by_regex(single_mouse_data = single_mouse_data,
exp_regex = search_table[i, 1],
con_regex = search_table[i, 2],
group = search_table[i, 3],
limit = unlist(search_table[i, 4]),
except = unlist(search_table[i, 5])
)
)
}
}
unique_num_output <-
unique_num_output %>%
dplyr::filter(!is.na(exp_index), !is.na(con_index)) %>%
arrange(group)
return(unique_num_output)
}
#加载所有函数 用于测试
devtools::load_all()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
rm(get_unique_num_table)
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk")) %>%
select(mouse_index) %>%
unique() %>%
unlist()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk"), batch == "HP-65") %>%
select(mouse_index) %>%
unique() %>%
unlist()
mouse_list
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
#加载所有函数 用于测试
devtools::load_all()
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk"), batch == "HP-65") %>%
select(mouse_index) %>%
unique() %>%
unlist()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk"), batch == "HP-65") %>%
filter(str_detect(organ, "(?i)pd.?1|cd107a|tnf_"))
a <- data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk"), batch == "HP-65") %>%filter(str_detect(organ, "(?i)pd.?1|cd107a|tnf_"))
View(a)
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk"), batch == "HP-65") %>%
select(mouse_index) %>%
unique() %>%
unlist()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
tcell <-
variational_grna_specified_sample_batch(data_for_analysis, remove_grna = "Cd47",
unique_num_info = unique_info_1610,
up_lfc = 0.7, down_lfc = -0.7)
tcell <-
variational_grna_specified_sample_batch(data_for_analysis, remove_grna = "Cd47",
unique_num_info = unique_info,
up_lfc = 0.7, down_lfc = -0.7)
View(tcell)
View(tcell[["NK_tumor-periphery_1913"]])
#加载所有函数 用于测试
devtools::load_all()
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk"), batch == "HP-65") %>%
select(mouse_index) %>%
unique() %>%
unlist()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
tcell <-
variational_grna_specified_sample_batch(data_for_analysis, remove_grna = "Cd47",
unique_num_info = unique_info,
up_lfc = 0.7, down_lfc = -0.7)
View(tcell)
View(tcell[["NK_tumor-periphery_1913"]])
a <- data_for_analysis %>% filter(str_detect(organ, "(?i)(?<=tumor.{0,200}?)nk|nk(?=.{0,200}?(tumor))"), str_detect(organ,"NK"))
a
a <- data_for_analysis %>% filter(str_detect(organ, "(?i)(?<=tumor.{0,200}?)nk|nk(?=.{0,200}?(tumor))"), str_detect(organ,"NK"), order == 1, batch == "HP-65")
a
View(a)
a <- data_for_analysis %>% filter(str_detect(organ, "(?i)(?<!tumor.{0,200}?)nk|nk(?!.{0,200}?tumor)"), str_detect(organ,"NK"), order == 1, batch == "HP-65")
a <- data_for_analysis %>% filter(str_detect(organ, "(?i)(?<!tumor.{0,200}?)nk"), str_detect(organ,"NK"), order == 1, batch == "HP-65")
#加载所有函数 用于测试
devtools::load_all()
mouse_list <-
data_for_analysis %>%
filter(mouse_strain == 1913, order == 1, cas == "yes", str_detect(sample, "(?i)nk"), batch == "HP-65") %>%
select(mouse_index) %>%
unique() %>%
unlist()
unique_info <- get_unique_num_table(data_for_analysis, mouse_list, 1913)
unique_info
tcell <-
variational_grna_specified_sample_batch(data_for_analysis, remove_grna = "Cd47",
unique_num_info = unique_info,
up_lfc = 0.7, down_lfc = -0.7)
View(tcell[["NK_tumor-periphery_1913"]])
# 保存当前所用的包环境，当然我们才刚刚开始开发，别的包都没有引入
renv::snapshot()
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
library(MARC)
#加载所有函数 用于测试
devtools::load_all()
setwd("D:/research/my_lab/MARC_bioinformatics/amplicon/result")
hp_65 <- data_clean_for_ngs("2022-02-06 HP-65.tsv", sample_path = "sample_info/sample_info HP-65.xlsx")
conflicted::conflict_prefer("filter", "dplyr")
hp_65 <- data_clean_for_ngs("2022-02-06 HP-65.tsv", sample_path = "sample_info/sample_info HP-65.xlsx")
sub_other
sub_other$gene
sub_other$gene
sub_other$gene
sub_other$gene[str_detect(sub_other$Name,"NC5|nc5") & sub_other$mouse_strain == 1913] <- "NC"
sub_other$gene
#加载所有函数 用于测试
devtools::load_all()
conflicted::conflict_prefer("filter", "dplyr")
hp_65 <- data_clean_for_ngs("2022-02-06 HP-65.tsv", sample_path = "sample_info/sample_info HP-65.xlsx")
#加载所有函数 用于测试
devtools::load_all()
conflicted::conflict_prefer("filter", "dplyr")
hp_65 <- data_clean_for_ngs("2022-02-06 HP-65.tsv", sample_path = "sample_info/sample_info HP-65.xlsx")
source("D:/research/my_lab/Gene_Screen_Analysis 2019.12.14 -/MARC/R/clean_the_ngs_data.R", encoding = 'UTF-8')
#加载所有函数 用于测试
devtools::load_all()
conflicted::conflict_prefer("filter", "dplyr")
hp_65 <- data_clean_for_ngs("2022-02-06 HP-65.tsv", sample_path = "sample_info/sample_info HP-65.xlsx")
library("devtools")
library("tidyverse")
conflicted::conflict_prefer("filter", "dplyr")
setwd("D:/research/my_lab/MARC_bioinformatics/amplicon/result")
hp_65 <- data_clean_for_ngs("2022-02-06 HP-65.tsv", sample_path = "sample_info/sample_info HP-65.xlsx")
#加载所有函数 用于测试
devtools::load_all()
hp_65 <- data_clean_for_ngs("2022-02-06 HP-65.tsv", sample_path = "sample_info/sample_info HP-65.xlsx")
#加载所有函数 用于测试
devtools::load_all()
library("devtools")
library("tidyverse")
conflicted::conflict_prefer("filter", "dplyr")
#加载所有函数 用于测试
devtools::load_all()
hp_65 <-
data_clean_for_ngs("D:/research/my_lab/MARC_bioinformatics/amplicon/result/2022-02-06 HP-65.tsv",
sample_path = "D:/research/my_lab/MARC_bioinformatics/amplicon/result/sample_info/sample_info HP-65.xlsx")
View(hp_65)
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
library("devtools")
library("tidyverse")
conflicted::conflict_prefer("filter", "dplyr")
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
library("devtools")
remove.packages("MARC")
install.packages("ggplot2")
install.packages("magrittr")
#install.packages("RColorBrewer")
#install.packages("ggrepel")
#install.packages("gghalves")
install.packages("tidyverse")
install.packages("reshape2")
install.packages("ggsci")
install.packages("xlsx")
install.packages("yyplot")
#install.packages("ggbreak")
install.packages("tidyr")
#install.packages("ggseqlogo")
install.packages("extrafont")
#install.packages("sangerseqR")
install.packages("profvis")
library("devtools")
remove.packages("renv")
renv::restore(confirm = FALSE)
renv::init()
renv::init()
renv::restore(confirm = FALSE)
install.packages("renv")
install.packages("renv")
install.packages("renv")
install.packages("renv")
renv::init()
# 保存当前所用的包环境，当然我们才刚刚开始开发，别的包都没有引入
renv::snapshot()
install.packages("ggplot2")
install.packages("magrittr")
#install.packages("RColorBrewer")
#install.packages("ggrepel")
#install.packages("gghalves")
install.packages("tidyverse")
install.packages("reshape2")
install.packages("ggsci")
install.packages("xlsx")
install.packages("yyplot")
#install.packages("ggbreak")
install.packages("tidyr")
#install.packages("ggseqlogo")
install.packages("extrafont")
#install.packages("sangerseqR")
install.packages("profvis")
# 保存当前所用的包环境，当然我们才刚刚开始开发，别的包都没有引入
renv::snapshot()
library("devtools")
library("tidyverse")
conflicted::conflict_prefer("filter", "dplyr")
install.packages("devtools")
library("devtools")
library(usethis)
# 保存当前所用的包环境，当然我们才刚刚开始开发，别的包都没有引入
renv::snapshot()
library("devtools")
library("tidyverse")
conflicted::conflict_prefer("filter", "dplyr")
# 保存当前所用的包环境，当然我们才刚刚开始开发，别的包都没有引入
renv::snapshot()
remove.packages("MARC", lib="D:/research/Bioinformatics/R-4.1.2/library")
# 保存当前所用的包环境，当然我们才刚刚开始开发，别的包都没有引入
renv::snapshot()
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
usethis::use_readme_rmd()
usethis::use_readme_rmd()
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
devtools::document()
devtools::build()
library(iMAP)
#在函数加完包所需结构之后，用来构建一个包
devtools::build_readme()
usethis::use_readme_rmd()
devtools::document()
devtools::build()
